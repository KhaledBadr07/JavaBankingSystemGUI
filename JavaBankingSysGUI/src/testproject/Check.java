/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package testproject;
import javax.swing.*;
import java.util.*;
import java.io.*;
import java.util.Date; 
/**
 *
 * @author khale
 */
public class Check extends javax.swing.JFrame {

    /**
     * Creates new form Check
     */
    int selectedIndex;
    ArrayList<User> users;
    ArrayList<Normal> normals;
    ArrayList<VIP>  vips;
    int lastNormalIndex=-1;
    String daysPart = " ";
    String limitPart=" ";
    long diff;
    
    public Check() {
        initComponents();
        users = new ArrayList<User>();
        normals = new ArrayList<Normal>();
        vips = new ArrayList<VIP>();
        populateArrayList();
        String [] names = new String[normals.size()+vips.size()];
        int j=0;
        for(int i=0;i<normals.size();i++){
            names[j]=normals.get(i).getName();
            j++;
            lastNormalIndex=i;
        }
        for(int i=0;i<vips.size();i++){
            names[j]=(vips.get(i).getName());
            j++;
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(names));
        jComboBox1.setSelectedIndex(0);
    }
    
    public void populateArrayList(){
        //file el normals bada2
        try {
            FileInputStream normFile = new FileInputStream("norm2.dat");
            ObjectInputStream normInputFile = new ObjectInputStream(normFile);
            boolean endOfFile= false;
            while(!endOfFile){
                try{
                    normals.add((Normal)normInputFile.readObject());
                }
                catch(EOFException e){
                    endOfFile = true;
                }
                catch(Exception f){
                   JOptionPane.showMessageDialog(null,f.getMessage());
               }
            }
            normInputFile.close();           
        }
        catch(IOException e) {
            JOptionPane.showMessageDialog(null,e.getMessage());           
        }
        //file el vips bada2
        try {
            FileInputStream vipFile = new FileInputStream("vip2.dat");
            ObjectInputStream vipInputFile = new ObjectInputStream(vipFile);
            boolean endOfFile= false;
            while(!endOfFile){
                try{
                    vips.add((VIP)vipInputFile.readObject());
                }
                catch(EOFException e){
                    endOfFile = true;
                }
                catch(Exception f){
                   JOptionPane.showMessageDialog(null,f.getMessage());
               }
            }
            vipInputFile.close();           
        }
        catch(IOException e) {
            JOptionPane.showMessageDialog(null,e.getMessage());           
        }
        //file el user combined 
        /*try {
            FileInputStream userFile = new FileInputStream("user.dat");
            ObjectInputStream userInputFile = new ObjectInputStream(userFile);
            boolean endOfFile= false;
            while(!endOfFile){
                try{
                    users.add((User)userInputFile.readObject());
                }
                catch(EOFException e){
                    endOfFile = true;
                }
                catch(Exception f){
                   JOptionPane.showMessageDialog(null,f.getMessage());
               }
            }
            userInputFile.close();           
        }
        catch(IOException e) {
            JOptionPane.showMessageDialog(null,e.getMessage());           
        }*/
    }
    
    public void saveUsersToFile(){
        try{
            FileOutputStream normFile = new FileOutputStream("norm2.dat");
            ObjectOutputStream normOutputFile = new ObjectOutputStream(normFile);
            for(int i=0;i<normals.size();i++){
                normOutputFile.writeObject(normals.get(i));
            }
            normOutputFile.close();
            //JOptionPane.showMessageDialog(null,"Successfully Saved");
            this.dispose();
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        try{
            FileOutputStream vipFile = new FileOutputStream("vip2.dat");
            ObjectOutputStream vipOutputFile = new ObjectOutputStream(vipFile);
            for(int i=0;i<vips.size();i++){
                vipOutputFile.writeObject(vips.get(i));
            }
            vipOutputFile.close();
            JOptionPane.showMessageDialog(null,"Credit Card is reseted");
            this.dispose();
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Credit Card Balance");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Debt");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Days after last credit purchase");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Type");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton1.setText("Reset Credit Balance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);

        jTextField2.setEditable(false);

        jTextField3.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Admin Password");

        jTextField4.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jComboBox1, 0, 230, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jTextField4)
                    .addComponent(jPasswordField1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(238, 238, 238))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        Date date2 = new Date();
        selectedIndex=jComboBox1.getSelectedIndex();
        if(selectedIndex>lastNormalIndex){
            if(vips.get(selectedIndex-lastNormalIndex-1).getDateOfPurchase() == null){
                jTextField3.setText("no credit purchases");
                daysPart=" ";
            } else{
                Date date1 = vips.get(selectedIndex-lastNormalIndex-1).getDateOfPurchase();
                diff = vips.get(0).daysBetween(date1, date2);
                vips.get(selectedIndex-lastNormalIndex-1).setDaysAfterPurchase((int)diff/10);
                jTextField3.setText(diff/10+"");
                daysPart = ", Days left to settle debt : "+(180-diff/10) + "days";
            }  
            jTextField1.setText(vips.get(selectedIndex-lastNormalIndex-1).getMaxLimit()+"");//ebda2 en2el men hena + satr 277&283
            jTextField2.setText("VIP");
            if(vips.get(selectedIndex-lastNormalIndex-1).isDebited()){
                if(vips.get(selectedIndex-lastNormalIndex-1).getMaxLimit()<0){
                    limitPart = vips.get(selectedIndex-lastNormalIndex-1).getMaxLimit()+"$ in debt";
                }
                if(diff>180){
                    daysPart = ", allowed period to settle debt has passed";
                }
                jTextField4.setText(limitPart+daysPart);
            }
            else {
                jTextField4.setText("not indebited");
            }
            
        }else{
            if(normals.get(selectedIndex).getDateOfPurchase() == null){
                jTextField3.setText("no credit purchases");
                daysPart=" ";
            } else{
                Date date1 = normals.get(selectedIndex).getDateOfPurchase();
                diff = normals.get(0).daysBetween(date1, date2);
                normals.get(selectedIndex).setDaysAfterPurchase((int)diff/10);
                jTextField3.setText(diff/10+"");
                daysPart = ", Days left to settle debt : "+(60-diff/10) + "days";
            }  //ebda2 en2el le hena
            jTextField1.setText(normals.get(selectedIndex).getMaxLimit()+"");//ebda2 en2el men hena + satr 277&283
            jTextField2.setText("Normal");
            if(normals.get(selectedIndex).isDebited()){
                if(normals.get(selectedIndex).getMaxLimit()<0){
                    limitPart = normals.get(selectedIndex).getMaxLimit()+"$ in debt";
                }
                if(diff>60){
                    daysPart = ", allowed period to settle debt has passed";
                }
                jTextField4.setText(limitPart+daysPart);
            }
            else {
                jTextField4.setText("not indebited");
            }
            
        }
        
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!jPasswordField1.getText().equals("Admin")){
            JOptionPane.showMessageDialog(null,"not admin's password, only admins can reset debt");
        }else{
            Date resetDate = new Date();
            if(selectedIndex>lastNormalIndex){
                vips.get(selectedIndex-lastNormalIndex-1).setMaxLimit(20000);
                vips.get(selectedIndex-lastNormalIndex-1).setDaysAfterPurchase(0);
                vips.get(selectedIndex-lastNormalIndex-1).setDateOfPurchase(resetDate);
            }else{
                normals.get(selectedIndex).setMaxLimit(10000);
                normals.get(selectedIndex).setDaysAfterPurchase(0);
                normals.get(selectedIndex).setDateOfPurchase(resetDate);
            }
            saveUsersToFile();
        } 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Check().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
